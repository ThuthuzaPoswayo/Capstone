{"ast":null,"code":"import Card from \"../components/CardComp.vue\";\nimport Loader from \"../components/Loader.vue\";\nexport default {\n  components: {\n    Card,\n    Loader\n  },\n  data() {\n    return {\n      service: null,\n      loading: true\n    };\n  },\n  // methods: {\n  //   async getService() {\n  //     const serviceId = this.$route.params.id;\n  //     try {\n  //       const { data } = await this.$store.dispatch(\"getService\", serviceId);\n  //       this.service = this.$store.state.service.find(\n  //         (service) => service.service_id === Number(serviceId)\n  //       );\n  //     } catch (error) {\n  //       console.error(\"Error fetching service:\", error);\n  //     }\n  //   },\n  //   bookService() {\n  //     // Implement booking logic\n  //     console.log(\"Booking service:\", this.service.service_name);\n  //   },\n  // },\n\n  methods: {\n    async getService() {\n      const serviceId = this.$route.params.id; // Get the service ID from route\n      try {\n        // Dispatch Vuex action and wait for response\n        const service = await this.$store.dispatch(\"getService\", serviceId);\n        this.service = service; // Assign the result to the component's data\n      } catch (error) {\n        console.error(\"Error fetching service:\", error);\n      }\n    },\n    bookService() {\n      console.log(\"Booking service:\", this.service.service_name);\n    }\n  },\n  mounted() {\n    this.getService();\n    this.loading = false;\n  }\n};","map":{"version":3,"names":["Card","Loader","components","data","service","loading","methods","getService","serviceId","$route","params","id","$store","dispatch","error","console","bookService","log","service_name","mounted"],"sources":["C:\\Users\\Student\\Documents\\Capstone\\Capstone\\src\\views\\SinglePage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1 class=\"service-heading\">Service Details</h1>\r\n    <Loader v-if=\"loading\" />\r\n    <div class=\"container\" v-else>\r\n      <!-- <Card\r\n        id=\"servicesview\"\r\n        v-for=\"service in service\"\r\n        :key=\"service.service_id\"\r\n      >\r\n        <template v-slot:cardHeader>\r\n          <section>\r\n            <div class=\"prod\">\r\n              <div class=\"row row-cols-1 row-cols-md-2 g-4 card-proj\">\r\n                <div class=\"col\">\r\n                  <div class=\"card\">\r\n                    <img\r\n                      :src=\"service.images_url\"\r\n                      class=\"card-img-top\"\r\n                      alt=\"Service Image\"\r\n                    />\r\n                    <div class=\"card-body\">\r\n                      <h2 class=\"card-title\">{{ service.service_name }}</h2>\r\n                      <p class=\"card-text\">Price: R{{ service.price }}</p>\r\n                      <p class=\"card-text\">\r\n                        Duration: {{ service.duration }} minutes\r\n                      </p>\r\n                      <p class=\"card-text\">{{ service.description }}</p>\r\n                      <button @click=\"bookService\">\r\n                        Book {{ service.service_name }}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </template>\r\n      </Card> -->\r\n    \r\n      <Card id=\"servicesview\">\r\n  <template v-slot:cardHeader>\r\n    <section>\r\n      <div class=\"prod\">\r\n        <div class=\"card\">\r\n          <img\r\n            :src=\"service.images_url\"\r\n            class=\"card-img-top\"\r\n            alt=\"Service Image\"\r\n          />\r\n          <div class=\"card-body\">\r\n            <h2 class=\"card-title\">{{ service.service_name }}</h2>\r\n            <p class=\"card-text\">Price: R {{ service.price }}</p>\r\n            <p class=\"card-text\">Duration: {{ service.duration }} minutes</p>\r\n            <p class=\"card-text\">{{ service.description }}</p>\r\n            <button @click=\"bookService\">\r\n              Book {{ service.service_name }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </template>\r\n</Card>\r\n\r\n    \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport Card from \"../components/CardComp.vue\";\r\nimport Loader from \"../components/Loader.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    Card,\r\n    Loader,\r\n  },\r\n  data() {\r\n    return {\r\n      service: null,\r\n      loading: true,\r\n    };\r\n  },\r\n  // methods: {\r\n  //   async getService() {\r\n  //     const serviceId = this.$route.params.id;\r\n  //     try {\r\n  //       const { data } = await this.$store.dispatch(\"getService\", serviceId);\r\n  //       this.service = this.$store.state.service.find(\r\n  //         (service) => service.service_id === Number(serviceId)\r\n  //       );\r\n  //     } catch (error) {\r\n  //       console.error(\"Error fetching service:\", error);\r\n  //     }\r\n  //   },\r\n  //   bookService() {\r\n  //     // Implement booking logic\r\n  //     console.log(\"Booking service:\", this.service.service_name);\r\n  //   },\r\n  // },\r\n  \r\n  \r\n  methods: {\r\n  async getService() {\r\n    const serviceId = this.$route.params.id; // Get the service ID from route\r\n    try {\r\n      // Dispatch Vuex action and wait for response\r\n      const service = await this.$store.dispatch(\"getService\", serviceId);\r\n      this.service = service; // Assign the result to the component's data\r\n    } catch (error) {\r\n      console.error(\"Error fetching service:\", error);\r\n    }\r\n  },\r\n  bookService() {\r\n    console.log(\"Booking service:\", this.service.service_name);\r\n  }\r\n}\r\n\r\n  \r\n  ,mounted() {\r\n    this.getService();\r\n    this.loading = false;\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.service-heading {\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-weight: bold;\r\n  color: #ff69b4;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card {\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  background: linear-gradient(135deg, #ffe0f0, #f8bbd0);\r\n  padding: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-body {\r\n  text-align: center;\r\n}\r\n\r\nbutton {\r\n  background-color: #ff69b4;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"AAyEA,OAAOA,IAAG,MAAO,4BAA4B;AAC7C,OAAOC,MAAK,MAAO,0BAA0B;AAE7C,eAAe;EACbC,UAAU,EAAE;IACVF,IAAI;IACJC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGAC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,SAAQ,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE;MACzC,IAAI;QACF;QACA,MAAMP,OAAM,GAAI,MAAM,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC,YAAY,EAAEL,SAAS,CAAC;QACnE,IAAI,CAACJ,OAAM,GAAIA,OAAO,EAAE;MAC1B,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZD,OAAO,CAACE,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACb,OAAO,CAACc,YAAY,CAAC;IAC5D;EACF;EAGGC,OAAOA,CAAA,EAAG;IACT,IAAI,CAACZ,UAAU,CAAC,CAAC;IACjB,IAAI,CAACF,OAAM,GAAI,KAAK;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}